name: CI
on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  main:
    # if: ${{ github.event_name != 'pull_request' }} # for docker build job
    runs-on: ubuntu-latest
    env:
      # Docker build step params only
      NX_CLOUD_DISTRIBUTED_EXECUTION: false
      INPUT_PUSH: true
      INPUT_CACHE_FROM: type=registry,ref=ghcr.io/igor-enso/nx-workspace/shipper:buildcache
      INPUT_CACHE_TO: type=registry,ref=ghcr.io/igor-enso/nx-workspace/shipper:buildcache,mode=max
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: develop

      - run: npm ci

      - run: npx nx workspace-lint
      - run: npx nx format:check
      - run: npx nx affected --target=lint --parallel=3
      - run: npx nx affected --target=test --parallel=3 --ci --code-coverage
      - run: npx nx affected --target=build --parallel=3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: npx nx affected --target=docker
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
