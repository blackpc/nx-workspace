name: CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:

env:
  HUSKY: 0

jobs:
  build:
    permissions:
      packages: write
      contents: read
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    runs-on: ubuntu-latest
    env:
      INPUT_CACHE_FROM: type=registry,ref=ghcr.io/blackpc/nx-workspace/buildx-cache:buildcache
      INPUT_CACHE_TO: type=registry,ref=ghcr.io/blackpc/nx-workspace/buildx-cache:buildcache,mode=max
    steps:
      - name: Checkout [Pull Request]
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Checkout [Default Branch]
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ github.base_ref }}

      #
      # Lint, Test, Build
      #
      - run: npm ci
      - run: npx nx workspace-lint
      # - run: npx nx format:check
      - run: npx nx affected --target=lint --parallel=3
      - run: npx nx affected --target=test --parallel=3 --ci --code-coverage
      - run: npx nx affected --target=build --parallel=3

      #
      # Docker build & release
      #
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: npx nx affected --target=docker

      - name: Release
        if: ${{ success() && (github.event_name != 'pull_request' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_REGISTRY: https://npm.pkg.github.com
        run: |
          npx nx affected --target release --all
